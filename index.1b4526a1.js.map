{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCGA,I,EAAM,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EADS,SAAS,gBAAgB,CAAC,Q,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,IAGnC,EAAqB,SAAC,CAA5B,EACE,MAAO,CAAC,EAAa,OAAO,CAAC,QAAS,GACxC,GA8BA,AA5BiB,SAAC,CAAlB,EACE,EAAY,IAAI,CAAC,SAAC,CAAA,CAAG,CAArB,EACE,IAAM,EAAU,EAAmB,EAAE,OAAO,CAAC,MAAM,EAGnD,OAAO,AAFS,EAAmB,EAAE,OAAO,CAAC,MAAM,EAElC,CACnB,GAEA,IAAM,EAAQ,SAAS,aAAa,CAAC,KAErC,CAAA,EAAM,SAAS,CAAG,GAElB,EAAY,OAAO,CAAC,SAAC,CAArB,EACE,EAAM,WAAW,CAAC,EACpB,EACF,EAaS,GAVW,AAWP,EAXmB,GAAG,CAAC,SAAC,CAAnC,EAA6C,MAAA,CAC3C,KAAM,EAAK,WAAW,CAAC,IAAI,GAC3B,SAAU,EAAK,OAAO,CAAC,QAAQ,CAC/B,OAAQ,EAAK,OAAO,CAAC,MAAM,CAC3B,IAAK,CAAC,EAAK,OAAO,CAAC,GAAG,AACxB,C","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar liTags = document.querySelectorAll(\"li\");\nvar itemsArray = _to_consumable_array(liTags);\nvar fromStringToNumber = function(salaryString) {\n    return +salaryString.replace(/[$,]/g, \"\");\n};\nvar sortList = function(listElement) {\n    listElement.sort(function(a, b) {\n        var salaryA = fromStringToNumber(a.dataset.salary);\n        var salaryB = fromStringToNumber(b.dataset.salary);\n        return salaryB - salaryA;\n    });\n    var ulTag = document.querySelector(\"ul\");\n    ulTag.innerHTML = \"\";\n    listElement.forEach(function(item) {\n        ulTag.appendChild(item);\n    });\n};\nvar getEmployees = function(listElement) {\n    var employees = listElement.map(function(item) {\n        return {\n            name: item.textContent.trim(),\n            position: item.dataset.position,\n            salary: item.dataset.salary,\n            age: +item.dataset.age\n        };\n    });\n    return employees;\n};\nsortList(itemsArray);\ngetEmployees(itemsArray);\n\n//# sourceMappingURL=index.1b4526a1.js.map\n","'use strict';\n\nconst liTags = document.querySelectorAll('li');\nconst itemsArray = [...liTags];\n\nconst fromStringToNumber = (salaryString) => {\n  return +salaryString.replace(/[$,]/g, '');\n};\n\nconst sortList = (listElement) => {\n  listElement.sort((a, b) => {\n    const salaryA = fromStringToNumber(a.dataset.salary);\n    const salaryB = fromStringToNumber(b.dataset.salary);\n\n    return salaryB - salaryA;\n  });\n\n  const ulTag = document.querySelector('ul');\n\n  ulTag.innerHTML = '';\n\n  listElement.forEach((item) => {\n    ulTag.appendChild(item);\n  });\n};\n\nconst getEmployees = (listElement) => {\n  const employees = listElement.map((item) => ({\n    name: item.textContent.trim(),\n    position: item.dataset.position,\n    salary: item.dataset.salary,\n    age: +item.dataset.age,\n  }));\n\n  return employees;\n};\n\nsortList(itemsArray);\ngetEmployees(itemsArray);\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","itemsArray","_array_without_holes","isArray","document","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","fromStringToNumber","salaryString","replace","sortList","listElement","sort","a","b","salaryA","dataset","salary","salaryB","ulTag","querySelector","innerHTML","forEach","item","appendChild","map","textContent","trim","position","age"],"version":3,"file":"index.1b4526a1.js.map"}